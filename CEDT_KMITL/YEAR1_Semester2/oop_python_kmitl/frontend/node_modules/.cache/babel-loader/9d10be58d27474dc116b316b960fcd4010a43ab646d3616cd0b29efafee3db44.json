{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\watthachai\\\\OneDrive\\\\oop_python_kmitl\\\\frontend\\\\src\\\\components\\\\MovieGenreModal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieGenreModal = _ref => {\n  _s();\n  let {\n    active,\n    handleModal,\n    handleGenreModal,\n    genre_id,\n    setErrorMessage\n  } = _ref;\n  const [genre_name, SetGenreName] = useState(\"\");\n  useEffect(() => {\n    const getGenres = async () => {\n      const requestOptions = {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      const response = await fetch(`/api/genres/${genre_id}`, requestOptions);\n      if (!response.ok) {\n        setErrorMessage(\"Could not get genre\");\n      } else {\n        const data = await response.json();\n        SetGenreName(data.genre_name);\n      }\n    };\n    if (genre_id) {\n      getGenres();\n    }\n  }, [genre_id]);\n  const cleanFormData = () => {\n    SetGenreName(\"\");\n  };\n  const handleCreateMovieGenres = async e => {\n    e.preventDefault();\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        genre_name: genre_name\n      })\n    };\n    const response = await fetch(\"/api/genres\", requestOptions);\n    if (!response.ok) {\n      setErrorMessage(\"Could not create the genre\");\n    } else {\n      cleanFormData();\n      handleModal();\n    }\n  };\n  const handleUpdateMovieGenre = async e => {\n    e.preventDefault();\n    const requestOptions = {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        genre_name: genre_name\n      })\n    };\n    const response = await fetch(`/api/genres/${genre_id}`, requestOptions);\n    if (!response.ok) {\n      setErrorMessage(\"Could not update the genre\");\n    } else {\n      cleanFormData();\n      handleModal();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `modal ${active ? \"is-active\" : \"\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-background\",\n      onClick: handleModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"modal-card-head\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"modal-card-title\",\n          children: [genre_id ? \"Update\" : \"Create\", \" Genre\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete\",\n          \"aria-label\": \"close\",\n          onClick: handleModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"modal-card-body\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: genre_id ? handleUpdateMovieGenre : handleCreateMovieGenres,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"label\",\n              children: \"Genre Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"control\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"input\",\n                type: \"text\",\n                placeholder: \"Genre Name\",\n                value: genre_name,\n                onChange: e => SetGenreName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field is-grouped\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"control\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"button is-link\",\n                type: \"submit\",\n                children: genre_id ? \"Update\" : \"Create\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"control\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"button is-link is-light\",\n                onClick: handleModal,\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n_s(MovieGenreModal, \"BXNysMOBFLv7l+NREE/2PcKVdFs=\");\n_c = MovieGenreModal;\nexport default MovieGenreModal;\nvar _c;\n$RefreshReg$(_c, \"MovieGenreModal\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","MovieGenreModal","_ref","_s","active","handleModal","handleGenreModal","genre_id","setErrorMessage","genre_name","SetGenreName","getGenres","requestOptions","method","headers","response","fetch","ok","data","json","cleanFormData","handleCreateMovieGenres","e","preventDefault","body","JSON","stringify","handleUpdateMovieGenre","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/watthachai/OneDrive/oop_python_kmitl/frontend/src/components/MovieGenreModal.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst MovieGenreModal = ({ active, handleModal, handleGenreModal, genre_id, setErrorMessage }) => {\r\n    const [genre_name, SetGenreName] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        const getGenres = async () => {\r\n            const requestOptions = {\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            };\r\n            const response = await fetch(`/api/genres/${genre_id}`, requestOptions);\r\n\r\n            if (!response.ok){\r\n                setErrorMessage(\"Could not get genre\");\r\n            } else {\r\n                const data = await response.json();\r\n                SetGenreName(data.genre_name);\r\n            }\r\n        }\r\n        if (genre_id){\r\n            getGenres();\r\n        }\r\n    }, [genre_id]);\r\n\r\n    const cleanFormData = () => {\r\n        SetGenreName(\"\");\r\n    }\r\n\r\n    const handleCreateMovieGenres = async (e) => {\r\n        e.preventDefault();\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                genre_name: genre_name,\r\n            }),\r\n        };\r\n        const response = await fetch(\"/api/genres\", requestOptions);\r\n        if (!response.ok){\r\n            setErrorMessage(\"Could not create the genre\");\r\n        } else {\r\n            cleanFormData();\r\n            handleModal();\r\n        }\r\n    }\r\n\r\n    const handleUpdateMovieGenre = async (e) => {\r\n        e.preventDefault();\r\n        const requestOptions = {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                genre_name: genre_name,\r\n                \r\n            }),\r\n        };\r\n        const response = await fetch(`/api/genres/${genre_id}`, requestOptions);\r\n        if (!response.ok){\r\n            setErrorMessage(\"Could not update the genre\");\r\n        } else {\r\n            cleanFormData();\r\n            handleModal();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={`modal ${active ? \"is-active\" : \"\"}`}>\r\n            <div className=\"modal-background\" onClick={handleModal}></div>\r\n            <div className=\"modal-card\">\r\n                <header className=\"modal-card-head\">\r\n                    <p className=\"modal-card-title\">{genre_id ? \"Update\" : \"Create\"} Genre</p>\r\n                    <button className=\"delete\" aria-label=\"close\" onClick={handleModal}></button>\r\n                </header>\r\n                <section className=\"modal-card-body\">\r\n                    <form onSubmit={genre_id ? handleUpdateMovieGenre : handleCreateMovieGenres}>\r\n                        <div className=\"field\">\r\n                            <label className=\"label\">Genre Name</label>\r\n                            <div className=\"control\">\r\n                                <input\r\n                                    className=\"input\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Genre Name\"\r\n                                    value={genre_name}\r\n                                    onChange={(e) => SetGenreName(e.target.value)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"field is-grouped\">\r\n                            <div className=\"control\">\r\n                                <button className=\"button is-link\" type=\"submit\">\r\n                                    {genre_id ? \"Update\" : \"Create\"}\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"control\">\r\n                                <button className=\"button is-link is-light\" onClick={handleModal}>\r\n                                    Cancel\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </section>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MovieGenreModal;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}