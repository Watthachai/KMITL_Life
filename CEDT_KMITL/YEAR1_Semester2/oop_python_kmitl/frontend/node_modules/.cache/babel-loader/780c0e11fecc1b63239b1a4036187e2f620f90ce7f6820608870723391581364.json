{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\watthachai\\\\OneDrive\\\\oop_python_kmitl\\\\frontend\\\\src\\\\components\\\\Table.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport ErrorMessage from \"./ErrorMessage\";\nimport moment from \"moment\";\nimport { UserContext } from \"../context/UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Table = () => {\n  _s();\n  const [token, setToken] = useContext(UserContext);\n  const [series, setSeries] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  useEffect(() => {\n    getSeries();\n  }, []);\n  const getSeries = async () => {\n    const requestOptions = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const response = await fetch(\"/api/series\", requestOptions);\n    if (!response.ok) {\n      setErrorMessage(\"Something went wrong. Couldn't load the Series\");\n    } else {\n      const data = await response.json();\n      setSeries(data);\n      setLoaded(true);\n    }\n  };\n  const handleLogout = () => {\n    setToken(null);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-center\",\n            children: \"Series Table\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table table-striped\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  scope: \"col\",\n                  children: \"SeriesID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  scope: \"col\",\n                  children: \"Title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  scope: \"col\",\n                  children: \"Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  scope: \"col\",\n                  children: \"Date Released\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  scope: \"col\",\n                  children: \"Cover Image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: loaded && series.map(series => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  scope: \"row\",\n                  children: series.series_id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: series.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: series.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: moment(series.release_date).format('ll')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: series.cover_image\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"button mr-2 is-info is-light\",\n                    onClick: () => handleUpdate(series.seriesid),\n                    children: \"Update\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 65,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"button mr-2 is-danger is-light\",\n                    onClick: () => handleDelete(series.id),\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 41\n                }, this)]\n              }, series.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), token && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Table, \"iOEYNsl/SvL6KKKkXWmOps9xRIY=\");\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","useState","useEffect","useContext","ErrorMessage","moment","UserContext","jsxDEV","_jsxDEV","Fragment","_Fragment","Table","_s","token","setToken","series","setSeries","loaded","setLoaded","errorMessage","setErrorMessage","getSeries","requestOptions","method","headers","response","fetch","ok","data","json","handleLogout","children","className","fileName","_jsxFileName","lineNumber","columnNumber","scope","map","series_id","title","description","release_date","format","cover_image","onClick","handleUpdate","seriesid","handleDelete","id","_c","$RefreshReg$"],"sources":["C:/Users/watthachai/OneDrive/oop_python_kmitl/frontend/src/components/Table.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport ErrorMessage from \"./ErrorMessage\";\nimport moment from \"moment\";\nimport { UserContext } from \"../context/UserContext\";\n\n\nconst Table = () => {\n    const [token, setToken] = useContext(UserContext);\n    const [series, setSeries] = useState([]);\n    \n    const [loaded, setLoaded] = useState(false);\n    const [errorMessage, setErrorMessage] = useState(\"\");\n\n    useEffect(() => {\n      getSeries();\n    }, []);\n\n        const getSeries = async () => {\n            const requestOptions = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n        };\n\n        const response = await fetch(\"/api/series\", requestOptions);\n        if (!response.ok) {\n            setErrorMessage(\"Something went wrong. Couldn't load the Series\");\n        } else {\n            const data = await response.json();\n            setSeries(data);\n            setLoaded(true);\n        }\n    };\n\n    const handleLogout = () => {\n        setToken(null);\n    };\n\n    return (\n        <>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <h1 className=\"text-center\">Series Table</h1>\n                        <table className=\"table table-striped\">\n                            <thead>\n                                <tr>\n                                    <th scope=\"col\">SeriesID</th>\n                                    <th scope=\"col\">Title</th>\n                                    <th scope=\"col\">Description</th>\n                                    <th scope=\"col\">Date Released</th>\n                                    <th scope=\"col\">Cover Image</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {loaded && series.map((series) => (\n                                    <tr key={series.id}>\n                                        <th scope=\"row\">{series.series_id}</th>\n                                        <td>{series.title}</td>\n                                        <td>{series.description}</td>\n                                        <td>{moment(series.release_date).format('ll')}</td>\n                                        <td>{series.cover_image}</td>\n                                        <td>\n                                        <button\n                                            className=\"button mr-2 is-info is-light\"\n                                            onClick={() => handleUpdate(series.seriesid)}\n                                        >\n                                            Update\n                                        </button>\n                                        <button\n                                            className=\"button mr-2 is-danger is-light\"\n                                            onClick={() => handleDelete(series.id)}\n                                        >\n                                            Delete\n                                        </button>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n                {token && (\n                            <button className=\"button\" onClick={handleLogout}>\n                            Logout\n                            </button>\n                        )}        \n            </div>\n\n\n        </>\n    );\n};\n\nexport default Table;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}