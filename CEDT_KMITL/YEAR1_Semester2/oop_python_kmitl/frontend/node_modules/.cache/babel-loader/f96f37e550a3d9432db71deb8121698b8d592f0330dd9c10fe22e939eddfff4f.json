{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport ErrorMessage from \"../ErrorMessage\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Movie = () => {\n  _s();\n  const [movie, setMovie] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  useEffect(() => {\n    getMovies();\n  }, []);\n  const getMovies = async () => {\n    const requestOptions = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const response = await fetch(\"/api/movies\", requestOptions);\n    if (!response.ok) {\n      setErrorMessage(\"อ๊ะ!! มีบางอย่างผิดพลาด ไม่สามารถโหลดตารางได้\");\n    } else {\n      const data = await response.json();\n      setMovie(data);\n      setLoaded(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(Movie, \"fOwq+p4TBP2kpxm7qBqE25veJgc=\");\n_c = Movie;\nexport default Movie;\nvar _c;\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"names":["React","useState","useEffect","ErrorMessage","Fragment","_Fragment","jsxDEV","_jsxDEV","Movie","_s","movie","setMovie","loaded","setLoaded","errorMessage","setErrorMessage","getMovies","requestOptions","method","headers","response","fetch","ok","data","json","_c","$RefreshReg$"],"sources":["C:/Users/watthachai/OneDrive/oop_python_kmitl/frontend/src/components/Movie/Movie.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport ErrorMessage from \"../ErrorMessage\";\r\n\r\nconst Movie = () => {\r\n    const [movie, setMovie] = useState([]);\r\n    const [loaded, setLoaded] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        getMovies();\r\n    }, []);\r\n    \r\n    const getMovies = async () => {\r\n        const requestOptions = {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        };\r\n        const response = await fetch(\"/api/movies\", requestOptions);\r\n        if (!response.ok) {\r\n            setErrorMessage(\"อ๊ะ!! มีบางอย่างผิดพลาด ไม่สามารถโหลดตารางได้\");\r\n        } else {\r\n            const data = await response.json();\r\n            setMovie(data);\r\n            setLoaded(true);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Movie;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,iBAAiB;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACZc,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC1B,MAAMC,cAAc,GAAG;MACnBC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC;IACD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAa,EAAEJ,cAAc,CAAC;IAC3D,IAAI,CAACG,QAAQ,CAACE,EAAE,EAAE;MACdP,eAAe,CAAC,+CAA+C,CAAC;IACpE,CAAC,MAAM;MACH,MAAMQ,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;MAClCb,QAAQ,CAACY,IAAI,CAAC;MACdV,SAAS,CAAC,IAAI,CAAC;IACnB;EACJ,CAAC;EAED,oBACIN,OAAA,CAAAF,SAAA,mBAEE,CAAC;AAEX,CAAC;AAAAI,EAAA,CA/BKD,KAAK;AAAAiB,EAAA,GAALjB,KAAK;AAiCX,eAAeA,KAAK;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}