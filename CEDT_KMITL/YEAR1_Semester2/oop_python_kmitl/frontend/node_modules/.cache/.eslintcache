[{"C:\\Users\\watthachai\\OneDrive\\oop_python_kmitl\\frontend\\src\\index.js":"1","C:\\Users\\watthachai\\OneDrive\\oop_python_kmitl\\frontend\\src\\App.jsx":"2","C:\\Users\\watthachai\\OneDrive\\oop_python_kmitl\\frontend\\src\\context\\UserContext.jsx":"3","C:\\Users\\watthachai\\OneDrive\\oop_python_kmitl\\frontend\\src\\components\\Register.jsx":"4","C:\\Users\\watthachai\\OneDrive\\oop_python_kmitl\\frontend\\src\\components\\ErrorMessage.jsx":"5","C:\\Users\\watthachai\\OneDrive\\oop_python_kmitl\\frontend\\src\\components\\Header.jsx":"6","C:\\Users\\watthachai\\OneDrive\\oop_python_kmitl\\frontend\\src\\components\\Table.jsx":"7","C:\\Users\\watthachai\\OneDrive\\oop_python_kmitl\\frontend\\src\\components\\LeadModal.jsx":"8","C:\\Users\\watthachai\\OneDrive\\oop_python_kmitl\\frontend\\src\\components\\Login.jsx":"9","C:\\Users\\watthachai\\OneDrive\\oop_python_kmitl\\frontend\\src\\components\\Movie.jsx":"10","C:\\Users\\watthachai\\OneDrive\\oop_python_kmitl\\frontend\\src\\components\\SeriesModal.jsx":"11","C:\\Users\\watthachai\\OneDrive\\oop_python_kmitl\\frontend\\src\\components\\SeasonsModal.jsx":"12","C:\\Users\\watthachai\\OneDrive\\oop_python_kmitl\\frontend\\src\\components\\EpisodesModal.jsx":"13","C:\\Users\\watthachai\\OneDrive\\oop_python_kmitl\\frontend\\src\\components\\MoviesModal.jsx":"14","C:\\Users\\watthachai\\OneDrive\\oop_python_kmitl\\frontend\\src\\components\\GenreModal.jsx":"15","C:\\Users\\watthachai\\OneDrive\\oop_python_kmitl\\frontend\\src\\components\\MovieGenreModal.jsx":"16"},{"size":378,"mtime":1683304439480,"results":"17","hashOfConfig":"18"},{"size":1325,"mtime":1683304362410,"results":"19","hashOfConfig":"18"},{"size":822,"mtime":1683235299026,"results":"20","hashOfConfig":"18"},{"size":5130,"mtime":1683235849587,"results":"21","hashOfConfig":"18"},{"size":169,"mtime":1634135230000,"results":"22","hashOfConfig":"18"},{"size":502,"mtime":1634135230000,"results":"23","hashOfConfig":"18"},{"size":26431,"mtime":1683298737666,"results":"24","hashOfConfig":"18"},{"size":5605,"mtime":1634135230000,"results":"25","hashOfConfig":"18"},{"size":3496,"mtime":1683236001170,"results":"26","hashOfConfig":"18"},{"size":18270,"mtime":1683296745984,"results":"27","hashOfConfig":"18"},{"size":4722,"mtime":1683282624678,"results":"28","hashOfConfig":"18"},{"size":5207,"mtime":1683291917695,"results":"29","hashOfConfig":"18"},{"size":7735,"mtime":1683294306614,"results":"30","hashOfConfig":"18"},{"size":7306,"mtime":1683300093891,"results":"31","hashOfConfig":"18"},{"size":3851,"mtime":1683293301878,"results":"32","hashOfConfig":"18"},{"size":4526,"mtime":1683294597235,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"bxxi0r",{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"77"},"C:\\Users\\watthachai\\OneDrive\\oop_python_kmitl\\frontend\\src\\index.js",[],[],"C:\\Users\\watthachai\\OneDrive\\oop_python_kmitl\\frontend\\src\\App.jsx",["85","86","87"],[],"C:\\Users\\watthachai\\OneDrive\\oop_python_kmitl\\frontend\\src\\context\\UserContext.jsx",[],[],"C:\\Users\\watthachai\\OneDrive\\oop_python_kmitl\\frontend\\src\\components\\Register.jsx",["88","89","90","91","92","93","94","95","96"],[],"C:\\Users\\watthachai\\OneDrive\\oop_python_kmitl\\frontend\\src\\components\\ErrorMessage.jsx",[],[],"C:\\Users\\watthachai\\OneDrive\\oop_python_kmitl\\frontend\\src\\components\\Header.jsx",[],[],"C:\\Users\\watthachai\\OneDrive\\oop_python_kmitl\\frontend\\src\\components\\Table.jsx",["97","98","99","100","101","102","103"],[],"C:\\Users\\watthachai\\OneDrive\\oop_python_kmitl\\frontend\\src\\components\\LeadModal.jsx",["104"],[],"C:\\Users\\watthachai\\OneDrive\\oop_python_kmitl\\frontend\\src\\components\\Login.jsx",["105","106","107","108","109"],[],"C:\\Users\\watthachai\\OneDrive\\oop_python_kmitl\\frontend\\src\\components\\Movie.jsx",["110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137"],[],"C:\\Users\\watthachai\\OneDrive\\oop_python_kmitl\\frontend\\src\\components\\SeriesModal.jsx",["138"],[],"C:\\Users\\watthachai\\OneDrive\\oop_python_kmitl\\frontend\\src\\components\\SeasonsModal.jsx",["139"],[],"C:\\Users\\watthachai\\OneDrive\\oop_python_kmitl\\frontend\\src\\components\\EpisodesModal.jsx",["140","141"],[],"C:\\Users\\watthachai\\OneDrive\\oop_python_kmitl\\frontend\\src\\components\\MoviesModal.jsx",["142"],[],"import React, {useEffect, useState} from \"react\";\r\n\r\nconst MoviesModal = ({active, handleModal, movie_id, setErrorMessage}) => {\r\n    const [title, setTitle] = useState(\"\");\r\n    const [release_date, setReleaseDate] = useState(\"\")\r\n    const [duration, setDuration] = useState(\"\");\r\n    const [rating, setRating] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [cover_image, setCoverImage] = useState(\"\");\r\n    const [video_url, setVideoUrl] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        const getMovies = async () => {\r\n            const requestOptions = {\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            };\r\n            const response = await fetch(`/api/movies/${movie_id}`, requestOptions);\r\n\r\n            if (!response.ok) {\r\n                setErrorMessage(\"Could not get the movies\");\r\n            } else {\r\n                const data = await response.json();\r\n                setTitle(data.title);\r\n                setReleaseDate(data.release_date);\r\n                setDuration(data.duration);\r\n                setRating(data.rating);\r\n                setDescription(data.description);\r\n                setCoverImage(data.cover_image);\r\n                setVideoUrl(data.video_url); \r\n            }\r\n        };\r\n\r\n        if (movie_id) {\r\n            getMovies();\r\n        }\r\n    },[movie_id]);\r\n\r\n    const cleanFormData = () => {\r\n        setTitle(\"\");\r\n        setReleaseDate(\"\");\r\n        setDuration(\"\");\r\n        setRating(\"\");\r\n        setDescription(\"\");\r\n        setCoverImage(\"\");\r\n        setVideoUrl(\"\");\r\n    };\r\n\r\n    const handleCreateMovies = async (e) => {\r\n        e.preventDefault();\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                title: title,\r\n                duration: duration,\r\n                rating: rating,\r\n                description: description,\r\n                cover_image: cover_image,\r\n                video_url: video_url,\r\n            }),\r\n        };\r\n        const response = await fetch(\"/api/movies\", requestOptions);\r\n        if (!response.ok) {\r\n            setErrorMessage(\"Could not create the Movies\");\r\n        } else {    \r\n            cleanFormData();\r\n            handleModal();\r\n        }\r\n    };\r\n\r\n    const handleUpdateMovies = async (e) => {\r\n        e.preventDefault();\r\n        const requestOptions = {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                title: title,\r\n                release_date: release_date,\r\n                duration: duration,\r\n                rating: rating,\r\n                description: description,\r\n                cover_image: cover_image,\r\n                video_url: video_url,\r\n            }),\r\n        };\r\n        const response = await fetch(`/api/movies/${movie_id}`, requestOptions);\r\n        if (!response.ok) {\r\n            setErrorMessage(\"Could not update the movie\");\r\n        } else {\r\n            const data = await response.json();\r\n            setTitle(data.title);\r\n            setReleaseDate(data.release_date);\r\n            setDuration(data.duration);\r\n            setRating(data.rating);\r\n            setDescription(data.description);\r\n            setCoverImage(data.cover_image);\r\n            setVideoUrl(data.video_url);\r\n            handleModal();\r\n        }\r\n    };\r\n    \r\n    return (\r\n        <>\r\n        <div className={`modal ${active ? \"is-active\" : \"\"}`}>\r\n      <div className=\"modal-background\" onClick={handleModal}></div>\r\n      <div className=\"modal-card\">\r\n        <header className=\"modal-card-head\">\r\n          <p className=\"modal-card-title\">\r\n            {movie_id ? \"Update\" : \"Create\"} Movies\r\n          </p>\r\n        </header>\r\n        <section className=\"modal-card-body\">\r\n          <form>\r\n            <div className=\"field\">\r\n              <label className=\"label\">Title</label>\r\n              <div className=\"control\">\r\n                <input\r\n                  className=\"input\"\r\n                  type=\"text\"\r\n                  placeholder=\"Title\"\r\n                  value={title}\r\n                  onChange={(e) => setTitle(e.target.value)}\r\n                />\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"field\">\r\n              <label className=\"label\">Duration</label>\r\n              <div className=\"control\">\r\n                <input\r\n                  className=\"input\"\r\n                  type=\"text\"\r\n                  placeholder=\"Duration\"\r\n                  value={duration}\r\n                  onChange={(e) => setDuration(e.target.value)}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"field\">\r\n              <label className=\"label\">Rating</label>\r\n              <div className=\"control\">\r\n                <input\r\n                  className=\"input\"\r\n                  type=\"number\"\r\n                  placeholder=\"rating\"\r\n                  value={rating}\r\n                  onChange={(e) => setRating(e.target.value)}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"field\">\r\n              <label className=\"label\">Description</label>\r\n              <div className=\"control\">\r\n                <textarea\r\n                  className=\"textarea\"\r\n                  placeholder=\"Description\"\r\n                  value={description}\r\n                  onChange={(e) => setDescription(e.target.value)}\r\n                ></textarea>\r\n              </div>\r\n            </div>\r\n            <div className=\"field\">\r\n              <label className=\"label\">Cover Image</label>\r\n              <div className=\"control\">\r\n                <input\r\n                  className=\"input\"\r\n                  type=\"text\"\r\n                  placeholder=\"Cover Image\"\r\n                  value={cover_image}\r\n                  onChange={(e) => setCoverImage(e.target.value)}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"field\">\r\n              <label className=\"label\">Video URL</label>\r\n              <div className=\"control\">\r\n                <input\r\n                  className=\"input\"\r\n                  type=\"text\"\r\n                  placeholder=\"Video URL\"\r\n                  value={video_url}\r\n                  onChange={(e) => setVideoUrl(e.target.value)}\r\n                />\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </section>\r\n        <footer className=\"modal-card-foot has-background-primary-light\">\r\n        {movie_id ? (\r\n            <button className=\"button is-info\" onClick={handleUpdateMovies}>\r\n              Update\r\n            </button>\r\n          ) : (\r\n            <button className=\"button is-primary\" onClick={handleCreateMovies}>\r\n              Create\r\n            </button>\r\n          )}\r\n          <button className=\"button\" onClick={()=>{cleanFormData(); handleModal();}}>\r\n            Cancel\r\n          </button>\r\n        </footer>\r\n      </div>\r\n    </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MoviesModal;\r\n\r\n\r\n\r\n",[],"C:\\Users\\watthachai\\OneDrive\\oop_python_kmitl\\frontend\\src\\components\\GenreModal.jsx",["143"],[],"C:\\Users\\watthachai\\OneDrive\\oop_python_kmitl\\frontend\\src\\components\\MovieGenreModal.jsx",["144"],[],"import React, {useEffect, useState} from \"react\";\r\n\r\nconst MovieGenreModal = ({active, handleModal, handleGenreMovieModal, movie_genre_id, setErrorMessage}) => {\r\n    const [genre_id , setGenreId] = useState(\"\");\r\n    const [movie_id, setMovieId] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        const getMovieGenres = async () => {\r\n            const requestOptions = {\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            };\r\n            const response = await fetch(`/api/moviegenres/${movie_genre_id}`, requestOptions);\r\n\r\n            if (!response.ok){\r\n                setErrorMessage(\"Could not get movie genre\");\r\n            }\r\n            else {\r\n                const data = await response.json();\r\n                setGenreId(data.genre_id);\r\n                setMovieId(data.movie_id);\r\n            }\r\n        };\r\n        if (movie_genre_id){\r\n            getMovieGenres();\r\n        }\r\n    }, [movie_genre_id]);\r\n\r\n    const cleanFormData = () => {\r\n        setGenreId(\"\");\r\n        setMovieId(\"\");\r\n    }\r\n\r\n    const handleCreateMovieGenres = async (e) => {\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                genre_id: genre_id,\r\n                movie_id: movie_id,\r\n            }),\r\n        };\r\n        const response = await fetch(\"/api/moviegenres\", requestOptions);\r\n        if (!response.ok){\r\n            setErrorMessage(\"Could not create the movie genre\");\r\n        } else {\r\n            cleanFormData();\r\n            handleModal();\r\n        }\r\n    };\r\n\r\n    const handleUpdateMovieGenres = async (e) => {\r\n        e.preventDefault();\r\n        const requestOptions = {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                genre_id: genre_id,\r\n                movie_id: movie_id,\r\n            }),\r\n        };\r\n\r\n        const response = await fetch(`/api/moviegenres/${movie_genre_id}`, requestOptions);\r\n        if (!response.ok){\r\n            setErrorMessage(\"Could not update the movie genre\");\r\n        } else {\r\n            cleanFormData();\r\n            handleModal();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={`modal ${active ? \"is-active\" : \"\"}`}>\r\n            <div className=\"modal-background\" onClick={handleGenreMovieModal}></div>\r\n            <div className=\"modal-card\">\r\n                <header className=\"modal-card-head\">\r\n                    <p className=\"modal-card-title\">Movie Genre</p>\r\n                    <button className=\"delete\" aria-label=\"close\" onClick={handleModal}></button>\r\n                </header>\r\n                <section className=\"modal-card-body\">\r\n                    <form>\r\n                        <div className=\"field\">\r\n                            <label className=\"label\">Genre</label>\r\n                            <div className=\"control\">\r\n                                <input className=\"input\" type=\"text\" placeholder=\"Genre\" value={genre_id} onChange={(e) => setGenreId(e.target.value)} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"field\">\r\n                            <label className=\"label\">Movie</label>\r\n                            <div className=\"control\">\r\n                                <input className=\"input\" type=\"text\" placeholder=\"Movie\" value={movie_id} onChange={(e) => setMovieId(e.target.value)} />\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </section>\r\n                <footer className=\"modal-card-foot\">\r\n                    {movie_genre_id ? (\r\n                        <button className=\"button is-info\" onClick={handleUpdateMovieGenres}>\r\n                            Update\r\n                        </button>\r\n                    ) : (\r\n                        <button className=\"button is-info\" onClick={handleCreateMovieGenres}>\r\n                            Create\r\n                        </button>\r\n                    )}\r\n                    <button className=\"button\" onClick={() => { cleanFormData(); handleModal(); }}>\r\n                        Cancel\r\n                    </button>\r\n                </footer>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MovieGenreModal;",{"ruleId":"145","severity":1,"message":"146","line":6,"column":8,"nodeType":"147","messageId":"148","endLine":6,"endColumn":14},{"ruleId":"145","severity":1,"message":"149","line":7,"column":8,"nodeType":"147","messageId":"148","endLine":7,"endColumn":13},{"ruleId":"145","severity":1,"message":"150","line":12,"column":10,"nodeType":"147","messageId":"148","endLine":12,"endColumn":17},{"ruleId":"145","severity":1,"message":"151","line":5,"column":8,"nodeType":"147","messageId":"148","endLine":5,"endColumn":13},{"ruleId":"145","severity":1,"message":"152","line":6,"column":9,"nodeType":"147","messageId":"148","endLine":6,"endColumn":15},{"ruleId":"145","severity":1,"message":"153","line":6,"column":17,"nodeType":"147","messageId":"148","endLine":6,"endColumn":22},{"ruleId":"154","severity":1,"message":"155","line":58,"column":19,"nodeType":"156","endLine":58,"endColumn":64},{"ruleId":"157","severity":1,"message":"158","line":107,"column":98,"nodeType":"156","endLine":107,"endColumn":110},{"ruleId":"157","severity":1,"message":"158","line":114,"column":27,"nodeType":"156","endLine":114,"endColumn":39},{"ruleId":"157","severity":1,"message":"158","line":117,"column":27,"nodeType":"156","endLine":117,"endColumn":39},{"ruleId":"157","severity":1,"message":"158","line":118,"column":27,"nodeType":"156","endLine":118,"endColumn":39},{"ruleId":"157","severity":1,"message":"158","line":119,"column":27,"nodeType":"156","endLine":119,"endColumn":39},{"ruleId":"145","severity":1,"message":"159","line":11,"column":10,"nodeType":"147","messageId":"148","endLine":11,"endColumn":21},{"ruleId":"160","severity":1,"message":"161","line":465,"column":15,"nodeType":"162","messageId":"163","endLine":469,"endColumn":13},{"ruleId":"160","severity":1,"message":"161","line":523,"column":15,"nodeType":"162","messageId":"163","endLine":529,"endColumn":13},{"ruleId":"160","severity":1,"message":"161","line":588,"column":15,"nodeType":"162","messageId":"163","endLine":592,"endColumn":9},{"ruleId":"154","severity":1,"message":"155","line":631,"column":37,"nodeType":"156","endLine":631,"endColumn":68},{"ruleId":"160","severity":1,"message":"161","line":653,"column":11,"nodeType":"162","messageId":"163","endLine":657,"endColumn":9},{"ruleId":"160","severity":1,"message":"161","line":705,"column":15,"nodeType":"162","messageId":"163","endLine":709,"endColumn":13},{"ruleId":"164","severity":1,"message":"165","line":36,"column":6,"nodeType":"166","endLine":36,"endColumn":17,"suggestions":"167"},{"ruleId":"145","severity":1,"message":"168","line":2,"column":8,"nodeType":"147","messageId":"148","endLine":2,"endColumn":16},{"ruleId":"145","severity":1,"message":"169","line":3,"column":8,"nodeType":"147","messageId":"148","endLine":3,"endColumn":16},{"ruleId":"145","severity":1,"message":"170","line":16,"column":9,"nodeType":"147","messageId":"148","endLine":16,"endColumn":16},{"ruleId":"154","severity":1,"message":"155","line":50,"column":13,"nodeType":"156","endLine":50,"endColumn":58},{"ruleId":"157","severity":1,"message":"158","line":109,"column":22,"nodeType":"156","endLine":109,"endColumn":34},{"ruleId":"145","severity":1,"message":"171","line":2,"column":8,"nodeType":"147","messageId":"148","endLine":2,"endColumn":20},{"ruleId":"145","severity":1,"message":"172","line":3,"column":8,"nodeType":"147","messageId":"148","endLine":3,"endColumn":14},{"ruleId":"145","severity":1,"message":"173","line":10,"column":12,"nodeType":"147","messageId":"148","endLine":10,"endColumn":24},{"ruleId":"174","severity":1,"message":"175","line":45,"column":51,"nodeType":"156","endLine":45,"endColumn":160},{"ruleId":"157","severity":1,"message":"158","line":52,"column":25,"nodeType":"156","endLine":52,"endColumn":37},{"ruleId":"176","severity":1,"message":"177","line":53,"column":25,"nodeType":"156","messageId":"178","endLine":53,"endColumn":89,"fix":"179"},{"ruleId":"157","severity":1,"message":"158","line":56,"column":25,"nodeType":"156","endLine":56,"endColumn":37},{"ruleId":"157","severity":1,"message":"158","line":57,"column":25,"nodeType":"156","endLine":57,"endColumn":37},{"ruleId":"157","severity":1,"message":"158","line":83,"column":33,"nodeType":"156","endLine":83,"endColumn":45},{"ruleId":"157","severity":1,"message":"158","line":90,"column":33,"nodeType":"156","endLine":90,"endColumn":45},{"ruleId":"157","severity":1,"message":"158","line":97,"column":37,"nodeType":"156","endLine":97,"endColumn":49},{"ruleId":"157","severity":1,"message":"158","line":104,"column":37,"nodeType":"156","endLine":104,"endColumn":49},{"ruleId":"157","severity":1,"message":"158","line":217,"column":33,"nodeType":"156","endLine":217,"endColumn":45},{"ruleId":"157","severity":1,"message":"158","line":218,"column":33,"nodeType":"156","endLine":218,"endColumn":45},{"ruleId":"157","severity":1,"message":"158","line":219,"column":33,"nodeType":"156","endLine":219,"endColumn":45},{"ruleId":"157","severity":1,"message":"158","line":220,"column":33,"nodeType":"156","endLine":220,"endColumn":45},{"ruleId":"157","severity":1,"message":"158","line":224,"column":37,"nodeType":"156","endLine":224,"endColumn":49},{"ruleId":"157","severity":1,"message":"158","line":225,"column":37,"nodeType":"156","endLine":225,"endColumn":49},{"ruleId":"157","severity":1,"message":"158","line":226,"column":37,"nodeType":"156","endLine":226,"endColumn":49},{"ruleId":"157","severity":1,"message":"158","line":227,"column":37,"nodeType":"156","endLine":227,"endColumn":49},{"ruleId":"157","severity":1,"message":"158","line":228,"column":37,"nodeType":"156","endLine":228,"endColumn":49},{"ruleId":"157","severity":1,"message":"158","line":229,"column":37,"nodeType":"156","endLine":229,"endColumn":49},{"ruleId":"157","severity":1,"message":"158","line":230,"column":37,"nodeType":"156","endLine":230,"endColumn":49},{"ruleId":"157","severity":1,"message":"158","line":231,"column":37,"nodeType":"156","endLine":231,"endColumn":49},{"ruleId":"157","severity":1,"message":"158","line":232,"column":37,"nodeType":"156","endLine":232,"endColumn":49},{"ruleId":"157","severity":1,"message":"158","line":233,"column":37,"nodeType":"156","endLine":233,"endColumn":49},{"ruleId":"157","severity":1,"message":"158","line":234,"column":37,"nodeType":"156","endLine":234,"endColumn":49},{"ruleId":"157","severity":1,"message":"158","line":235,"column":37,"nodeType":"156","endLine":235,"endColumn":49},{"ruleId":"164","severity":1,"message":"165","line":34,"column":6,"nodeType":"166","endLine":34,"endColumn":17,"suggestions":"180"},{"ruleId":"164","severity":1,"message":"165","line":31,"column":8,"nodeType":"166","endLine":31,"endColumn":19,"suggestions":"181"},{"ruleId":"164","severity":1,"message":"165","line":37,"column":8,"nodeType":"166","endLine":37,"endColumn":20,"suggestions":"182"},{"ruleId":"145","severity":1,"message":"183","line":72,"column":11,"nodeType":"147","messageId":"148","endLine":72,"endColumn":31},{"ruleId":"164","severity":1,"message":"165","line":39,"column":7,"nodeType":"166","endLine":39,"endColumn":17,"suggestions":"184"},{"ruleId":"164","severity":1,"message":"165","line":26,"column":8,"nodeType":"166","endLine":26,"endColumn":18,"suggestions":"185"},{"ruleId":"164","severity":1,"message":"165","line":29,"column":8,"nodeType":"166","endLine":29,"endColumn":24,"suggestions":"186"},"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'Table' is defined but never used.","'message' is assigned a value but never used.","'Login' is defined but never used.","'Routes' is defined but never used.","'Route' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'UserContext' is defined but never used.","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","JSXText","putCommentInBraces","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setErrorMessage'. Either include it or remove the dependency array. If 'setErrorMessage' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["187"],"'ReactDOM' is defined but never used.","'Register' is defined but never used.","'history' is assigned a value but never used.","'ErrorMessage' is defined but never used.","'moment' is defined but never used.","'errorMessage' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"188","text":"189"},["190"],["191"],["192"],"'handleUpdateEpisodes' is assigned a value but never used.",["193"],["194"],["195"],{"desc":"196","fix":"197"},[1962,1962]," rel=\"noreferrer\"",{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},"Update the dependencies array to be: [id, setErrorMessage, token]",{"range":"210","text":"211"},"Update the dependencies array to be: [series_id, setErrorMessage]",{"range":"212","text":"213"},"Update the dependencies array to be: [season_id, setErrorMessage]",{"range":"214","text":"215"},"Update the dependencies array to be: [episode_id, setErrorMessage]",{"range":"216","text":"217"},"Update the dependencies array to be: [movie_id, setErrorMessage]",{"range":"218","text":"219"},"Update the dependencies array to be: [genre_id, setErrorMessage]",{"range":"220","text":"221"},"Update the dependencies array to be: [movie_genre_id, setErrorMessage]",{"range":"222","text":"223"},[1029,1040],"[id, setErrorMessage, token]",[983,994],"[series_id, setErrorMessage]",[1065,1076],"[season_id, setErrorMessage]",[1397,1409],"[episode_id, setErrorMessage]",[1432,1442],"[movie_id, setErrorMessage]",[857,867],"[genre_id, setErrorMessage]",[1002,1018],"[movie_genre_id, setErrorMessage]"]